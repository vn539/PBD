{% extends "base.html" %}

{% block scripts %}
{% endblock %}

{% block content_title %}
	<title>{{ TITLE }}</title>
{% endblock %}


{% block content %}

 <style>
	 
div.overlay 
	 {
		position: absolute;
		top: 200px;
		left: 50%;
		width: 850px;
		height: 340px;
		margin-top: -59px;
		margin-left: -370px;
		opacity: 1; filter: alpha(opacity=100);
		z-index: 1002;
		border: 1px solid #e3e3e3;
		-webkit-box-shadow: 0 0 5px #e3e3e3;
		-moz-box-shadow: 0 0 5px #e3e3e3;
		box-shadow: 0 0 5px #e3e3e3;
		background-color: #fff;
		padding: 20px 30px;
		font:20px Arial;
		}
	#query1Image,#query2Image 
	{
	width:580px;
	height:295px;
	margin-left:11px;
	margin-top:0px;
	cursor: pointer;
	border: 5px solid white;
	
	
	}
	#graphbtc, #graph2btc
	{
	width: 300px;
	height:150px;
	}
	#query2Image:hover #graph2btc
	{
	-webkit-transform: scale(1.3);
	}
	 
	path.link {
	  fill: none;
	  stroke: #493D26;
	  stroke-width: 1.5px;
	  	
	}
	marker#licensing {
	  fill: green;
	}
	 
	 marker{
		 fill:#493D26;
	 }
	 
	path.link.licensing {
	  stroke: #493D26;
	}
	path.link.resolved {
	  stroke-dasharray: 0,2 1;
	}
	circle {
	  fill: #C24641;
	  stroke: #fff;
	  stroke-width: 1.5px;
	}
	text {
	  font: 10px sans-serif;
	  pointer-events: none;
	}
	text.shadow {
	  stroke: #fff;
	  stroke-width: 3px;
	  stroke-opacity: 0.2;
	}
</style> 


<script type="text/javascript">
//Javascript for highcharts
	function loadcoldcache(filtertime, refinetime, jena_cold) 
	{
		//alert('loadcoldcache jQuery function called. ' + filtertime +' ' + refinetime +' ' + jena_cold);
		$('#coldcachecontainer').highcharts({
		chart: {
		    type: 'column'
		},
		title: {
		    text: 'Time Comparison'
		},
		subtitle: {
		    text: 'RIQ vs Jena TDB'
		},
		xAxis: {
		    categories: ['RIQ		', 'Jena TDB	'],
		    groupPadding: 1,
		      labels: {
			 style: {
			    fontWeight: 'bold',
			    fontSize: '12px'
			 }
			}	   
		},
		yAxis: {
		    allowDecimals: false,
		    min: 0,
		    title: {
		        text: 'Time'
		    }
		},
		tooltip: {
		formatter: function () {
		return '<b>' + this.x + '</b><br/>' +
		this.series.name + ': ' + this.y + '<br/>' +
		'Total: ' + this.point.stackTotal;
		}
		},
		plotOptions: {
		    column: {
		        stacking: 'normal'
		    }
		},
		series: [
		    {
		    name: 'Cold Cache Filter Time(RIQ)',
		    data: [filtertime, 0],
		    pointWidth: 25 ,
		    groupPadding: 0.5,	            
		    stack: 'male'
		}, {
		    name: 'Cold Cache Refine Time(RIQ)',
		    data: [refinetime, 0],
		    pointWidth: 25 ,
		    groupPadding: 0.5,	   
		    stack: 'male'
		}, 
		    
		    {
		    name: 'Cold Cache time(Jena)',
		    data: [0, jena_cold],
		        color: Highcharts.getOptions().colors[8],
		    groupPadding: 0.5,
		    pointWidth: 25 ,	    
		    stack: 'female'
		},
		]
	    });
	}	
</script>

<script type="text/javascript">
	//Javascript for highcharts
	function loadwarmcache(filtertime, refinetime, jena_warm) 
	{
		//alert('loadwarmcache jQuery function called. ' + filtertime +' ' + refinetime +' ' + jena_warm);
		$('#warmcachecontainer').highcharts({
		chart: {
		    type: 'column'
	
		},
		title: {
		    text: 'Time Comparison'
		},
		subtitle: {
		    text: 'RIQ vs Jena TDB'
		},
		xAxis: {
		    categories: ['RIQ		', 'Jena TDB	'],
		      labels: {
			 style: {
			    fontWeight: 'bold',
			    fontSize: '12px'
			 }
			}
		},
		yAxis: {
		    allowDecimals: false,
		    min: 0,
		    title: {
		        text: 'Time'
		    }
		},
		tooltip: {
		formatter: function () {
		return '<b>' + this.x + '</b><br/>' +
		this.series.name + ': ' + this.y + '<br/>' +
		'Total: ' + this.point.stackTotal;
		}
		},
		plotOptions: {
		    column: {
		        stacking: 'normal'
		    }
		},
		series: [
		     {
		    name: 'Warm Cache Refine time(RIQ)',
		    data: [refinetime, 0],
		    groupPadding: 0.5,
		    pointWidth: 25
		    
		},
		    {
		    name: 'Warm Cache Filter time(RIQ)',
		    data: [filtertime, 0],
		    groupPadding: 0.5,
		    pointWidth: 25 
		},
		    {
		    name: 'Warm Cache time(Jena)',
		    data: [0, jena_warm],
		    groupPadding: 0.5,
		    pointWidth: 25
		    
		},
		    
		   
		]
	    });
	}	
</script>
	
<script type="text/javascript">
	//Javascript to run RIQ
	function runRIQ(e)
	{
	   //var form = document.getElementById("frmRIQ");
    	//   var formURL = form.action;
	    var postData = $('#frmRIQ').serialize();
	    //$('#frmRIQ').submit();
	    $.ajax({
		url: '/executesparqlqueries/',
		type: "POST",
		dataType: "text",
		data: postData,
		timeout: 9000000000,
		success: function(m) {
			//alert('Response from ajax call: ' + m);
			responseDoc = $.parseHTML(m);
			// get and inject result data
			var resultData = $(responseDoc).find('#queryresults');
			//alert('resultData: ' + resultData.html());
			document.getElementById('queryresults').innerHTML = resultData.html();
			// get and inject result chart
			var chartData = $(responseDoc).find('#coldwarmgraphdata');
			//alert('chartData: ' + chartData.html());
			document.getElementById('coldwarmgraphdata').innerHTML = chartData.html();
			var filtertime = parseFloat(document.getElementById('filtertime').innerHTML);
			var refinetime = parseFloat(document.getElementById('refinetime').innerHTML);
			var jena_warm = parseFloat(document.getElementById('jena_warm').innerHTML);
			var jena_cold = parseFloat(document.getElementById('jena_cold').innerHTML);
			var typecache = document.getElementById("typecache").value;
			document.getElementById('queryresults').style.display = "block" ;
			if (typecache == 'cold')
			{
				loadcoldcache(filtertime, refinetime, jena_cold);
				document.getElementById('coldcachecontainer').style.display = "block" ;
			}
			else
			{
				loadwarmcache(filtertime, refinetime, jena_warm);
				document.getElementById('warmcachecontainer').style.display = "block" ;
			}
			
			var d3Data = $(responseDoc).find('#d3records');
			document.getElementById('d3records').innerHTML = d3Data.html();
			
			var d3datadivs = document.getElementById('d3records').getElementsByTagName("div");
			var links = new Array();
			var predicates = new Array();
			for(var i = 0; i < d3datadivs.length; i++){
				var objValue = d3datadivs[i].getAttribute("obj");
				if (objValue.indexOf("http://") != -1)
				{
					objValue = objValue.substring(objValue.lastIndexOf("/") + 1);
					objValue = objValue.replace(">", "");
				}
				
				var predicateValue = d3datadivs[i].getAttribute("predicate");
				if (predicateValue.indexOf("http://") != -1)
				{
					predicateValue = predicateValue.substring(predicateValue.lastIndexOf("/") + 1);
					predicateValue = predicateValue.substring(0, predicateValue.length-2);
				}
				else
				{
					predicateValue = predicateValue.substring(0, predicateValue.length-1);
				}
				
				var obj1 = {source: d3datadivs[i].getAttribute("sub"), target: objValue, type: predicateValue};
				links.push(obj1);
				predicates.push(predicateValue);
			}
			
			renderD3Graph(links, predicates);
		},
		error: function(n, textStatus, exception) {
			alert('Error from ajax call: ' + n);
	
		}
	    });
	}
	
	//Javascript to display the queries in the dropdown
	function showQueries(e)
	{
		document.getElementById('coldcachecontainer').style.display = 'none';
		document.getElementById('warmcachecontainer').style.display = 'none';
		document.getElementById('queryresults').style.display = 'none';	 
	    var qname = document.getElementById("queryDisplay").value;
	    var d= "queryname=" + qname;
	    
	    $.ajax({
		url: "/getfilecontent",
		type: "GET",
		dataType: "text",
		data: d,
		success: function(m) {
			//alert('Response from ajax call: ' + m);
			document.getElementById('col1-container').style.display = "block" ;
			document.getElementById('col2-container').style.display = "block" ;
			document.getElementById('querytext-content').textContent = m; 
			
			document.getElementById('query1Image').style.display = "none"; 
			document.getElementById('query2Image').style.display = "none"; 
			 
			switch (qname)
			{
			
				case "btc1":
					document.getElementById('query1Image').style.display = 'block'; 
					break;
	
				case "btc2":
				    	document.getElementById('query2Image').style.display = 'block'; 
					break;
			}
		}
	    });
	}
	
	//Javascript to display which dataset
	function myFunction()
	 {
			 
	var x = document.getElementById("indexname").value;
		
	if (x.indexOf("BTC")>=0)
	{
	document.getElementById("dataset1").value = "BTC";
	}
	else
	{
	document.getElementById("dataset1").value = "LOGD";
	}
	}
	
	
	
	function createnewqueryoverlay()
	 {
	 document.getElementById('queryOverlay').style.display = 'block';
	}
	
function saveQuery(e)
{
	    var form = document.getElementById("frmnewQuery");
    	var formURL = form.action;
	    var postData = $('#frmnewQuery').serialize();
	    
	    $.ajax({
			url: '/savenewquerycontent/',
			type: "POST",
			dataType: "text",
			data: postData,
			timeout: 9000000000,
			success: function(m) {
				//alert('Response from ajax call: ' + m);
				var newqueryname = document.getElementById("newqueryname").value;
				var queryOption = document.getElementById("queryDisplay");
				var newqueryoption = document.createElement("option");
				newqueryoption.text = newqueryname;
				newqueryoption.value = newqueryname;
				queryOption.add(newqueryoption);
				document.getElementById('queryOverlay').style.display = 'none';
			},
			error: function(n, textStatus, exception) {
				alert('Error from ajax call: ' + n);
			}
	    });
}
	function cancelnewqueryoverlay()
	 {
	 document.getElementById('queryOverlay').style.display = 'none';
	}
function renderD3Graph(links, predicates)
{
	// D3 javascript section
	//sort links by source, then target
	links.sort(function(a,b) {
		if (a.source > b.source) {return 1;}
		else if (a.source < b.source) {return -1;}
		else {
			if (a.target > b.target) {return 1;}
			if (a.target < b.target) {return -1;}
			else {return 0;}
		}
	});
	//any links with duplicate source and target get an incremented 'linknum'
	for (var i=0; i<links.length; i++) {
		if (i != 0 &&
			links[i].source == links[i-1].source &&
			links[i].target == links[i-1].target) {
				links[i].linknum = links[i-1].linknum + 1;
			}
		else {links[i].linknum = 1;};
	};
	var nodes = {};
	// Compute the distinct nodes from the links.
	links.forEach(function(link) {
	  link.source = nodes[link.source] || (nodes[link.source] = {name: link.source});
	  link.target = nodes[link.target] || (nodes[link.target] = {name: link.target});
	});
	var w = 800,
		h = 600;
	var force = d3.layout.force()
		.nodes(d3.values(nodes))
		.links(links)
		.size([w, h])
		.linkDistance(270)
		.charge(-300)
		
		.on("tick", tick)
		.start();
	var svg = d3.select("body").append("svg:svg")
		.attr("width", w)
		.attr("height", h)
		.style("background" ,"#98AFC7");
	// Per-type markers, as they don't inherit styles.
	svg.append("svg:defs").selectAll("marker")
		.data(predicates)
	  .enter().append("svg:marker")
		.attr("id", String)
		.attr("viewBox", "0 -5 10 10")
		.attr("refX", 45)
		.attr("refY", -1.5)
		.attr("markerWidth", 6)
		.attr("markerHeight", 6)
		.attr("orient", "auto")
	  .append("svg:path")
		.attr("d", "M0,-5L10,0L0,5");
	var path = svg.append("svg:g").selectAll("path")
		.data(force.links())
	  .enter().append("svg:path")
		.attr("class", function(d) { return "link " + d.type; })
		.attr("id",function(d,i) { return "linkId_" + i; })
		.attr("marker-end", function(d) { return "url(#" + d.type + ")"; });
		var linktext = svg.append("svg:g").selectAll("g.linklabelholder").data(force.links());
		linktext.enter().append("g").attr("class", "linklabelholder")
		 .append("text")
		 .attr("class", "linklabel")
		 .style("font-size", "13px")
		 .style("font-weight","bold")
		 .attr("x", "105")
		 .attr("y", "70")
		 .attr("text-anchor", "start")
		   .style("fill","#3B3131")
		 .append("textPath")
		.attr("xlink:href",function(d,i) { return "#linkId_" + i;})
		 .text(function(d) { 
		 return d.type; 
		 });
	var circle = svg.append("svg:g").selectAll("circle")
		.data(force.nodes())
	  .enter().append("svg:circle")
		.attr("r", 30)
		.style("fill", "#C24641")
		.call(force.drag);
	var text = svg.append("svg:g").selectAll("g")
		.data(force.nodes())
	  .enter().append("svg:g");
	text.append("svg:text")
		.attr("x", "-0.8em")
		.attr("y", ".31em")
		 .style("font-size", "13px")
		 .style("font-weight","bold")
		 .style("fill","#493D26")
		.text(function(d) { return d.name; });
	// Use elliptical arc path segments to doubly-encode directionality.
	function tick() {
	  path.attr("d", function(d) {
		var dx = d.target.x - d.source.x,
			dy = d.target.y - d.source.y,
			dr = 0/d.linknum;  //linknum is defined above
		return "M" + d.source.x + "," + d.source.y + "A" + dr + "," + dr + " 0 0,1 " + d.target.x + "," + d.target.y;
	  });
	  circle.attr("transform", function(d) {
		return "translate(" + d.x + "," + d.y + ")";
	  });
	  text.attr("transform", function(d) {
		return "translate(" + d.x + "," + d.y + ")";
	  });
	}
}
	
	
</script>

{% load static %}
	

<div class="container" >

		
	<div class="jumbotron" style="width:110%;height: 100%;margin-top:35px;margin-left:-50px;">
		<form id="frmRIQ" name="frmRIQ" action="" method="POST">
		{% csrf_token%}

			<!--Section that displays the table to fill the details to run a query -->			
			<div style = "margin-top: -85px">


				<table cellspacing = "25">
					<tr style = "width: 80%">
						<td style = "padding:30px">
					  		Select the index:
					 			<select onchange = "myFunction();" id="indexname" NAME="indexname"class="form-control" style="" >				
									{% for indexdata in indexdataobject %}
						 
										<option value="{{indexdata.IndexName}}"{%if IndexName1 == indexdata.IndexName %} selected="selected" {% endif %} >{{indexdata.IndexName}}</option>
									{% endfor %}
			    					</select>
							
						 </td>


						<td style = "padding:30px">			 
							Dataset:
								<input type="text"  id="dataset1" NAME="dataset"class="form-control" value="{%if Dataset == "LOGD" %} LOGD {%elif Dataset == "BTC"%} BTC {% endif %}" style="font-weight: 500;margin-bottom: 2px;"readonly >			
						</td>


						<td style = "padding:30px">			
					 		Select the Cache:
								<select id="typecache" NAME="typecache"class="form-control" style="" >
									<option value="cold"  >Cold Cache</option>
									<option value="warm"  >Warm Cache</option>
			    					</select> 

						</td>


						<td style = "padding:30px">			 
					 		Optimization Type:
								<select id="optimizationtype" NAME="optimizationtype"class="form-control" style="" >

									<option value="nopt">No Optimize</option>
									<option value="opt">Optimize </option>
			    					</select> 
								
								</td>

				

						<td style = "padding:30px">			
							Queries:
								<select id="queryDisplay"  NAME="queries"class="form-control" onchange="showQueries(event);" style="">
							 		{% for queryfilename in querynamedataobject %}
							 			<option value="{{queryfilename.queryname}}">{{queryfilename.queryname}}</option>
									{% endfor %}
					
				    				</select>
						</td>

						<td style = "padding:30px">			
							
							<input id="newquery" class="btn" onClick="createnewqueryoverlay();" type="button" value="Create New Query" />	
						</td>

						<td style = "padding:30px;">
						<br/>
						<br/>
							<input id="runquery"class="btn btn-primary btn-sm" onClick="runRIQ(event);" style="background-color:#5a87dd;border-color:#5a87dd;" type="button" alt="submitData" value="Run RIQ" />			
						</td>
					</tr>		
				</table>	
		</form>


<!--Section that displays queries -->	
				<table>
					<tr>
						<td>

							<div id="col1-container" style="background-color:#eee;width: 600px;-webkit-box-shadow: 0 0 22px rgba(0,0,0,.5);margin-top:-24px;margin-left:-50px;{%if displaygraph == 1%} display:block {% else %}display:none{% endif %}">
							<!-- container for displaying query text -->
								<div id = "querytext-container"  style = "margin-left:27px;width:550px;display:block;" >
				  					<label for = "querytext" style = "font-weight: 500;margin-bottom: 0px;  ">Query</label>
										<textarea id ="querytext-content" name ="querytext-content"spellcheck="false" class="form-control"  style = "overflow-y: scroll; "rows="13" cols="150"readonly>
											
			    						</textarea>
								</div>

	 					
					
						<!-- container to display query result -->
								<div id ="queryresults" class="form-control" style = "margin-left: 27px;margin-top:24px;height: 270px;overflow-y: scroll;overflow-x: scroll;width: 550px;display:block; ">


									<table border="1"style="padding:6px;">	
	
										{% for queryresult in Q2Results %}

										<tr>
											{% for cell in queryresult %}
											<td>{{cell}}</td>
											{% endfor %}
										</tr>	

										{% endfor %}
									</table>

						 		</div>
								<div id ="d3records">
								</div>
					
							</div>

						</td>
		
	<!--Section that displays RDF graph image from GRUFF -->			
						<td>
								<div id="col2-container" style="background-color: #eee;width: 600px;margin-left:35px;margin-top:-24px;-webkit-box-shadow: 0 0 22px rgba(0,0,0,.5);{%if displaygraph == 1%} display:block {% else %}display:none{% endif %}">
									<label>Graphical View:</label>
										<div id = "query1Image" style=" {%if displaygraph == 1 and QueriesForm == 'btc1'  %} display:block {% else %}display:none{% endif %}"">
											 <img id= "graphbtc" src="/static/BTC2query.jpg" alt="graphbtc" > 		
										</div>
						
									<!--query2 graph -->
										<div id = "query2Image" style=" {%if displaygraph == 1 and QueriesForm == 'btc2'  %} display:block {% else %}display:none{% endif %}">
											<img id= "graph2btc" src="/static/graphbtc.jpg" alt="graph2btc" data-zoom-image="/static/graphbtc.jpg" > 		
										</div>
						
		
										<!--Section that displays chart RIQ vs JENA -->			
											<div id="coldcachecontainer" style="margin-left:10px;width:580px; height:265px;margin-top:24px;{%if TypeCache == "cold" %} display:block {% else %}display:none{% endif %}"></div>
											<div id="warmcachecontainer" style="margin-left:10px;width:580px; height:265px;margin-top:24px;{%if TypeCache == "warm" %} display:block {% else %}display:none{% endif %}"></div>
									<!--Section that contains data for chart RIQ vs JENA -->			
											<div id="coldwarmgraphdata" style="display:none;">
											</div>
								</div>
						</td>
					</tr>			
				</table>
	
			
			</div>
		</div>
	<div id="queryOverlay" class="overlay" style="display:none;">
		<form id="frmnewQuery" name="frmnewQuery" action="" method="POST">			 
			{% csrf_token%}
			Query Name<input type="text"  id="newqueryname" name="newqueryname" class="form-control" value="" style="width:20%;margin-bottom:15px;" >
			<textarea id ="newquery-content" name ="newquery-content"spellcheck="false" class="form-control"  style = "overflow-y: scroll;margin-bottom:15px; "rows="8" cols="120"></textarea>
			<input id="savenewqueryBtn"class="btn btn-primary btn-sm" onClick="saveQuery(event);" style="background-color:#5a87dd;border-color:#5a87dd;" type="button" alt="submitData" value="Save Query" />
			<a onclick="cancelnewqueryoverlay();" id ="cancelQuery" class="btn btn-primary" role="button"> Cancel</a>
		</form>	
	</div>
																									 
</div>
<script>
$('#graphbtc').elevateZoom({zoomWindowPosition: 5});																										 
																										 </script>
{% endblock %}
